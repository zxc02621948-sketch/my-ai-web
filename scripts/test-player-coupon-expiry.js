import { dbConnect } from '../lib/db.js';
import User from '../models/User.js';

async function testPlayerCouponExpiry() {
  await dbConnect();
  console.log('\nüß™ Êí≠ÊîæÂô® 1 Êó•È´îÈ©óÂà∏ÈÅéÊúüÊ∏¨Ë©¶\n');

  // Ê∏¨Ë©¶Â†¥ÊôØ
  const testScenarios = [
    {
      name: 'ÂâõÊøÄÊ¥ªÔºà0 Â∞èÊôÇÔºâ',
      hoursAgo: 0,
      shouldExpire: false
    },
    {
      name: '12 Â∞èÊôÇÂæå',
      hoursAgo: -12,
      shouldExpire: false
    },
    {
      name: '23 Â∞èÊôÇÂæå',
      hoursAgo: -23,
      shouldExpire: false
    },
    {
      name: '24 Â∞èÊôÇÂæåÔºàÊÅ∞Â•Ω 1 Â§©Ôºâ',
      hoursAgo: -24,
      shouldExpire: true
    },
    {
      name: '25 Â∞èÊôÇÂæå',
      hoursAgo: -25,
      shouldExpire: true
    },
    {
      name: '48 Â∞èÊôÇÂæåÔºà2 Â§©Ôºâ',
      hoursAgo: -48,
      shouldExpire: true
    }
  ];

  console.log('üìã Ê∏¨Ë©¶Â†¥ÊôØÔºö\n');

  testScenarios.forEach((scenario, index) => {
    const now = new Date();
    const expiryTime = new Date(now.getTime() + scenario.hoursAgo * 60 * 60 * 1000);
    const isExpired = expiryTime <= now;
    const status = isExpired ? '‚ùå Â∑≤ÈÅéÊúü' : '‚úÖ ÊúâÊïà';
    const result = isExpired === scenario.shouldExpire ? '‚úÖ Ê≠£Á¢∫' : '‚ùå ÈåØË™§';

    console.log(`${index + 1}. ${scenario.name}`);
    console.log(`   ÈÅéÊúüÊôÇÈñì: ${expiryTime.toLocaleString('zh-TW')}`);
    console.log(`   Áï∂ÂâçÊôÇÈñì: ${now.toLocaleString('zh-TW')}`);
    console.log(`   ÁãÄÊÖã: ${status}`);
    console.log(`   È†êÊúü: ${scenario.shouldExpire ? 'Â∑≤ÈÅéÊúü' : 'ÊúâÊïà'}`);
    console.log(`   ÁµêÊûú: ${result}\n`);
  });

  // ÂØ¶ÈöõÊï∏ÊìöÂ∫´Ê∏¨Ë©¶
  console.log('\nüìä Êï∏ÊìöÂ∫´ÂØ¶ÈöõÊ∏¨Ë©¶:\n');

  // Êü•ÊâæÊâÄÊúâÊúâÊí≠ÊîæÂô®ÈÅéÊúüÊôÇÈñìÁöÑÁî®Êà∂
  const usersWithPlayer = await User.find({
    miniPlayerExpiry: { $exists: true, $ne: null }
  }).select('username miniPlayerExpiry playerCouponUsed miniPlayerPurchased');

  if (usersWithPlayer.length === 0) {
    console.log('‚ö†Ô∏è  Ê≤íÊúâÁî®Êà∂‰ΩøÁî®ÈÅéÊí≠ÊîæÂô®È´îÈ©óÂà∏\n');
  } else {
    const now = new Date();
    
    usersWithPlayer.forEach(user => {
      const isExpired = user.miniPlayerExpiry <= now;
      const timeLeft = user.miniPlayerExpiry - now;
      const hoursLeft = Math.floor(timeLeft / (1000 * 60 * 60));
      const minutesLeft = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

      console.log(`üë§ Áî®Êà∂: ${user.username}`);
      console.log(`   ÈÅéÊúüÊôÇÈñì: ${user.miniPlayerExpiry.toLocaleString('zh-TW')}`);
      console.log(`   Áï∂ÂâçÊôÇÈñì: ${now.toLocaleString('zh-TW')}`);
      console.log(`   ÁãÄÊÖã: ${isExpired ? '‚ùå Â∑≤ÈÅéÊúü' : '‚úÖ ÊúâÊïà'}`);
      
      if (!isExpired) {
        console.log(`   Ââ©È§òÊôÇÈñì: ${hoursLeft} Â∞èÊôÇ ${minutesLeft} ÂàÜÈêò`);
      } else {
        const hoursOver = Math.abs(hoursLeft);
        const minutesOver = Math.abs(minutesLeft);
        console.log(`   Â∑≤ÈÅéÊúü: ${hoursOver} Â∞èÊôÇ ${minutesOver} ÂàÜÈêò`);
      }
      
      console.log(`   Â∑≤‰ΩøÁî®ÂÖçË≤ªÂà∏: ${user.playerCouponUsed ? 'ÊòØ' : 'Âê¶'}`);
      console.log(`   Ê∞∏‰πÖËß£Èéñ: ${user.miniPlayerPurchased ? 'ÊòØ' : 'Âê¶'}\n`);
    });
  }

  // Êí≠ÊîæÂô®È°ØÁ§∫ÈÇèËºØÊ∏¨Ë©¶
  console.log('\nüéµ Êí≠ÊîæÂô®È°ØÁ§∫ÈÇèËºØÈ©óË≠â:\n');

  const testUser = await User.findOne({ username: 'cvb120g' });
  
  if (testUser) {
    const now = new Date();
    const hasValidCoupon = testUser.miniPlayerExpiry && testUser.miniPlayerExpiry > now;
    const hasPermanent = testUser.miniPlayerPurchased;
    const shouldShowPlayer = hasValidCoupon || hasPermanent;

    console.log(`üë§ Ê∏¨Ë©¶Áî®Êà∂: ${testUser.username}`);
    console.log(`   ÈÅéÊúüÊôÇÈñì: ${testUser.miniPlayerExpiry ? testUser.miniPlayerExpiry.toLocaleString('zh-TW') : 'Êú™Ë®≠ÁΩÆ'}`);
    console.log(`   È´îÈ©óÂà∏ÊúâÊïà: ${hasValidCoupon ? '‚úÖ ÊòØ' : '‚ùå Âê¶'}`);
    console.log(`   Ê∞∏‰πÖËß£Èéñ: ${hasPermanent ? '‚úÖ ÊòØ' : '‚ùå Âê¶'}`);
    console.log(`   ÊáâÈ°ØÁ§∫Êí≠ÊîæÂô®: ${shouldShowPlayer ? '‚úÖ ÊòØ' : '‚ùå Âê¶'}\n`);

    // Êèê‰æõÂâçÁ´ØÈÇèËºØ‰ª£Á¢ºÁ§∫‰æã
    console.log('üìù ÂâçÁ´ØÂà§Êñ∑ÈÇèËºØÁ§∫‰æã:\n');
    console.log('```javascript');
    console.log('// Âà§Êñ∑ÊòØÂê¶ÊáâË©≤È°ØÁ§∫Êí≠ÊîæÂô®');
    console.log('const now = new Date();');
    console.log('const hasValidCoupon = userData.miniPlayerExpiry && new Date(userData.miniPlayerExpiry) > now;');
    console.log('const hasPermanent = userData.miniPlayerPurchased;');
    console.log('const shouldShowPlayer = hasValidCoupon || hasPermanent;');
    console.log('```\n');
  } else {
    console.log('‚ö†Ô∏è  Êú™ÊâæÂà∞Ê∏¨Ë©¶Áî®Êà∂ cvb120g\n');
  }

  // ÈÅéÊúüËôïÁêÜÂª∫Ë≠∞
  console.log('\nüí° ÈÅéÊúüËôïÁêÜÂª∫Ë≠∞:\n');
  console.log('1. ‚úÖ Êï∏ÊìöÂ∫´‰∏çÈúÄË¶ÅÊ∏ÖÁêÜÈÅéÊúüÊï∏Êìö');
  console.log('   - miniPlayerExpiry ‰øùÁïô‰ΩúÁÇ∫Ê≠∑Âè≤Ë®òÈåÑ');
  console.log('   - playerCouponUsed ‰øùÁïô‰ª•Èò≤Ê≠¢ÈáçË§áÈ†òÂèñ\n');
  
  console.log('2. ‚úÖ ÂâçÁ´ØÂà§Êñ∑ÈÇèËºØ');
  console.log('   - ÊØèÊ¨°ËºâÂÖ•ÊôÇÊ™¢Êü• miniPlayerExpiry > now');
  console.log('   - Â¶ÇÊûúÈÅéÊúüÔºå‰∏çÈ°ØÁ§∫Êí≠ÊîæÂô®');
  console.log('   - Â¶ÇÊûúÊúâ miniPlayerPurchasedÔºåÊ∞∏‰πÖÈ°ØÁ§∫\n');

  console.log('3. ‚úÖ Áî®Êà∂È´îÈ©óÂÑ™Âåñ');
  console.log('   - È°ØÁ§∫Ââ©È§òÊôÇÈñìÊèêÁ§∫Ôºà‰æãÂ¶ÇÔºöÈ´îÈ©óÂà∏Ââ©È§ò 3 Â∞èÊôÇÔºâ');
  console.log('   - ÈÅéÊúüÂæåÊèêÁ§∫ÂçáÁ¥öÂà∞ LV3 Ëß£ÈéñÊ∞∏‰πÖ‰ΩøÁî®\n');

  console.log('‚úÖ Ê∏¨Ë©¶ÂÆåÊàêÔºÅ\n');
  process.exit(0);
}

testPlayerCouponExpiry().catch(err => {
  console.error('‚ùå Ê∏¨Ë©¶Â§±Êïó:', err);
  process.exit(1);
});


